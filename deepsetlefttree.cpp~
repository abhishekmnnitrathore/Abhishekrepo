#include<iostream>
using namespace std;
int Answer=0,max1=0;
struct Node{
int data;
struct Node *left, *right;
};
struct Node *newNode(int key)
{
struct Node *node= new Node();
node->data= key;
node->left=node->right= NULL;
return node;
}
int deepleft(struct Node *node ,int level, int flag)
{
if(node == NULL)
  return 0;
if(node->left== NULL && node->right == NULL )    // node->left->left== NULL && node->left->right== NULL
{
    if(level>max1 && flag==0)
      {
       max1= level;
       Answer= node->data;
      }
 return 0;	
}
deepleft(node->left,level+1,0);
deepleft(node->right,level+1,1);

}
int main()
{
    Node* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->right->left = newNode(5);
    root->right->right = newNode(6);
    root->right->left->right = newNode(7);
    root->right->right->right = newNode(8);
    root->right->left->right->left = newNode(9);
    root->right->right->right->right = newNode(10);
    root->right->right->right->right->right = newNode(11);
    deepleft(root,0,0);
    cout<<"Answer= "<<Answer<<endl;
return 0;
}
